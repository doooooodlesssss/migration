{"ast":null,"code":"var _jsxFileName = \"/Users/kapishverma/migration-tool/frontend/src/components/ReportGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/report-generator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportGenerator = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    countries: [],\n    years: [],\n    reportType: 'hotspots',\n    countryInput: '',\n    yearInput: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const addCountry = () => {\n    if (formData.countryInput && !formData.countries.includes(formData.countryInput)) {\n      setFormData({\n        ...formData,\n        countries: [...formData.countries, formData.countryInput],\n        countryInput: ''\n      });\n    }\n  };\n  const addYear = () => {\n    if (formData.yearInput && !formData.years.includes(parseInt(formData.yearInput))) {\n      setFormData({\n        ...formData,\n        years: [...formData.years, parseInt(formData.yearInput)],\n        yearInput: ''\n      });\n    }\n  };\n  const removeCountry = country => {\n    setFormData({\n      ...formData,\n      countries: formData.countries.filter(c => c !== country)\n    });\n  };\n  const removeYear = year => {\n    setFormData({\n      ...formData,\n      years: formData.years.filter(y => y !== year)\n    });\n  };\n  const generateReport = async () => {\n    if (formData.countries.length === 0 || formData.years.length === 0) {\n      alert('Please add at least one country and one year');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/reports/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          countries: formData.countries,\n          years: formData.years,\n          report_type: formData.reportType\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to generate report');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${formData.reportType}_report.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    } catch (error) {\n      console.error('Error generating report:', error);\n      alert('Failed to generate report');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Custom Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Countries to Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"countryInput\",\n          value: formData.countryInput,\n          onChange: handleChange,\n          placeholder: \"Enter country name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addCountry,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), formData.countries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-items\",\n        children: formData.countries.map((country, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item-tag\",\n          children: [country, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCountry(country),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Years to Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"yearInput\",\n          value: formData.yearInput,\n          onChange: handleChange,\n          placeholder: \"Enter year (e.g., 2020)\",\n          min: \"1950\",\n          max: new Date().getFullYear()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addYear,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), formData.years.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-items\",\n        children: formData.years.map((year, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item-tag\",\n          children: [year, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeYear(year),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Report Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"reportType\",\n            value: \"hotspots\",\n            checked: formData.reportType === 'hotspots',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), \"Hotspot Analysis\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"reportType\",\n            value: \"impact\",\n            checked: formData.reportType === 'impact',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), \"Impact Analysis\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"generate-btn\",\n      onClick: generateReport,\n      disabled: loading || formData.countries.length === 0 || formData.years.length === 0,\n      children: loading ? 'Generating...' : 'Generate PDF Report'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportGenerator, \"BmNppxYp6plLXCHIYDotTVw7mAg=\");\n_c = ReportGenerator;\nexport default ReportGenerator;\nvar _c;\n$RefreshReg$(_c, \"ReportGenerator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReportGenerator","_s","formData","setFormData","countries","years","reportType","countryInput","yearInput","loading","setLoading","handleChange","e","target","name","value","addCountry","includes","addYear","parseInt","removeCountry","country","filter","c","removeYear","year","y","generateReport","length","alert","response","fetch","method","headers","body","JSON","stringify","report_type","ok","Error","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","i","min","max","Date","getFullYear","checked","disabled","_c","$RefreshReg$"],"sources":["/Users/kapishverma/migration-tool/frontend/src/components/ReportGenerator.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/report-generator.css';\nconst ReportGenerator = () => {\n  const [formData, setFormData] = useState({\n    countries: [],\n    years: [],\n    reportType: 'hotspots',\n    countryInput: '',\n    yearInput: ''\n  });\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const addCountry = () => {\n    if (formData.countryInput && !formData.countries.includes(formData.countryInput)) {\n      setFormData({\n        ...formData,\n        countries: [...formData.countries, formData.countryInput],\n        countryInput: ''\n      });\n    }\n  };\n\n  const addYear = () => {\n    if (formData.yearInput && !formData.years.includes(parseInt(formData.yearInput))) {\n      setFormData({\n        ...formData,\n        years: [...formData.years, parseInt(formData.yearInput)],\n        yearInput: ''\n      });\n    }\n  };\n\n  const removeCountry = (country) => {\n    setFormData({\n      ...formData,\n      countries: formData.countries.filter(c => c !== country)\n    });\n  };\n\n  const removeYear = (year) => {\n    setFormData({\n      ...formData,\n      years: formData.years.filter(y => y !== year)\n    });\n  };\n\n  const generateReport = async () => {\n    if (formData.countries.length === 0 || formData.years.length === 0) {\n      alert('Please add at least one country and one year');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      const response = await fetch('http://localhost:8000/api/v1/reports/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          countries: formData.countries,\n          years: formData.years,\n          report_type: formData.reportType\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to generate report');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${formData.reportType}_report.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    } catch (error) {\n      console.error('Error generating report:', error);\n      alert('Failed to generate report');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"report-generator\">\n      <h2>Generate Custom Report</h2>\n      \n      <div className=\"form-section\">\n        <h3>Countries to Analyze</h3>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            name=\"countryInput\"\n            value={formData.countryInput}\n            onChange={handleChange}\n            placeholder=\"Enter country name\"\n          />\n          <button type=\"button\" onClick={addCountry}>Add</button>\n        </div>\n        \n        {formData.countries.length > 0 && (\n          <div className=\"selected-items\">\n            {formData.countries.map((country, i) => (\n              <span key={i} className=\"item-tag\">\n                {country}\n                <button onClick={() => removeCountry(country)}>×</button>\n              </span>\n            ))}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"form-section\">\n        <h3>Years to Analyze</h3>\n        <div className=\"input-group\">\n          <input\n            type=\"number\"\n            name=\"yearInput\"\n            value={formData.yearInput}\n            onChange={handleChange}\n            placeholder=\"Enter year (e.g., 2020)\"\n            min=\"1950\"\n            max={new Date().getFullYear()}\n          />\n          <button type=\"button\" onClick={addYear}>Add</button>\n        </div>\n        \n        {formData.years.length > 0 && (\n          <div className=\"selected-items\">\n            {formData.years.map((year, i) => (\n              <span key={i} className=\"item-tag\">\n                {year}\n                <button onClick={() => removeYear(year)}>×</button>\n              </span>\n            ))}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"form-section\">\n        <h3>Report Type</h3>\n        <div className=\"radio-group\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"reportType\"\n              value=\"hotspots\"\n              checked={formData.reportType === 'hotspots'}\n              onChange={handleChange}\n            />\n            Hotspot Analysis\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"reportType\"\n              value=\"impact\"\n              checked={formData.reportType === 'impact'}\n              onChange={handleChange}\n            />\n            Impact Analysis\n          </label>\n        </div>\n      </div>\n      \n      <button \n        className=\"generate-btn\"\n        onClick={generateReport}\n        disabled={loading || formData.countries.length === 0 || formData.years.length === 0}\n      >\n        {loading ? 'Generating...' : 'Generate PDF Report'}\n      </button>\n    </div>\n  );\n};\n\nexport default ReportGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}