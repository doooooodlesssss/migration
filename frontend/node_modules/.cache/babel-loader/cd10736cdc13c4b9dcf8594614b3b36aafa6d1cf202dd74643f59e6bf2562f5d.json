{"ast":null,"code":"var _jsxFileName = \"/Users/kapishverma/migration-tool/frontend/src/components/charts/SankeyChart.jsx\";\nimport React from 'react';\nimport Sankey from 'sankey-diagram';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SankeyChart = ({\n  data\n}) => {\n  const nodes = [];\n  const links = data;\n\n  // Extract unique nodes\n  const nodeNames = new Set();\n  data.forEach(link => {\n    nodeNames.add(link.source);\n    nodeNames.add(link.target);\n  });\n  Array.from(nodeNames).forEach((name, i) => {\n    nodes.push({\n      name,\n      id: i\n    });\n  });\n\n  // Map links to use node IDs\n  const mappedLinks = links.map(link => ({\n    source: Array.from(nodeNames).indexOf(link.source),\n    target: Array.from(nodeNames).indexOf(link.target),\n    value: link.value\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Sankey, {\n      nodes: nodes,\n      links: mappedLinks,\n      width: 800,\n      height: 500,\n      nodeWidth: 15,\n      nodePadding: 10,\n      layout: 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = SankeyChart;\nexport default SankeyChart;\nvar _c;\n$RefreshReg$(_c, \"SankeyChart\");","map":{"version":3,"names":["React","Sankey","jsxDEV","_jsxDEV","SankeyChart","data","nodes","links","nodeNames","Set","forEach","link","add","source","target","Array","from","name","i","push","id","mappedLinks","map","indexOf","value","style","height","children","width","nodeWidth","nodePadding","layout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kapishverma/migration-tool/frontend/src/components/charts/SankeyChart.jsx"],"sourcesContent":["import React from 'react';\nimport Sankey from 'sankey-diagram';\n\nconst SankeyChart = ({ data }) => {\n  const nodes = [];\n  const links = data;\n  \n  // Extract unique nodes\n  const nodeNames = new Set();\n  data.forEach(link => {\n    nodeNames.add(link.source);\n    nodeNames.add(link.target);\n  });\n  \n  Array.from(nodeNames).forEach((name, i) => {\n    nodes.push({ name, id: i });\n  });\n  \n  // Map links to use node IDs\n  const mappedLinks = links.map(link => ({\n    source: Array.from(nodeNames).indexOf(link.source),\n    target: Array.from(nodeNames).indexOf(link.target),\n    value: link.value\n  }));\n\n  return (\n    <div style={{ height: '500px' }}>\n      <Sankey\n        nodes={nodes}\n        links={mappedLinks}\n        width={800}\n        height={500}\n        nodeWidth={15}\n        nodePadding={10}\n        layout={32}\n      />\n    </div>\n  );\n};\n\nexport default SankeyChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,KAAK,GAAGF,IAAI;;EAElB;EACA,MAAMG,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC3BJ,IAAI,CAACK,OAAO,CAACC,IAAI,IAAI;IACnBH,SAAS,CAACI,GAAG,CAACD,IAAI,CAACE,MAAM,CAAC;IAC1BL,SAAS,CAACI,GAAG,CAACD,IAAI,CAACG,MAAM,CAAC;EAC5B,CAAC,CAAC;EAEFC,KAAK,CAACC,IAAI,CAACR,SAAS,CAAC,CAACE,OAAO,CAAC,CAACO,IAAI,EAAEC,CAAC,KAAK;IACzCZ,KAAK,CAACa,IAAI,CAAC;MAAEF,IAAI;MAAEG,EAAE,EAAEF;IAAE,CAAC,CAAC;EAC7B,CAAC,CAAC;;EAEF;EACA,MAAMG,WAAW,GAAGd,KAAK,CAACe,GAAG,CAACX,IAAI,KAAK;IACrCE,MAAM,EAAEE,KAAK,CAACC,IAAI,CAACR,SAAS,CAAC,CAACe,OAAO,CAACZ,IAAI,CAACE,MAAM,CAAC;IAClDC,MAAM,EAAEC,KAAK,CAACC,IAAI,CAACR,SAAS,CAAC,CAACe,OAAO,CAACZ,IAAI,CAACG,MAAM,CAAC;IAClDU,KAAK,EAAEb,IAAI,CAACa;EACd,CAAC,CAAC,CAAC;EAEH,oBACErB,OAAA;IAAKsB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9BxB,OAAA,CAACF,MAAM;MACLK,KAAK,EAAEA,KAAM;MACbC,KAAK,EAAEc,WAAY;MACnBO,KAAK,EAAE,GAAI;MACXF,MAAM,EAAE,GAAI;MACZG,SAAS,EAAE,EAAG;MACdC,WAAW,EAAE,EAAG;MAChBC,MAAM,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAnCIhC,WAAW;AAqCjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}